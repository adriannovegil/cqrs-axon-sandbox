version: '3.9'

services:
  # Infrastructure
  # ============================================================================
  # Config service
  config:
    build: ./config
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_USER: ${CONFIG_SERVICE_USER}
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      CONFIG_KEYSTORE_PASSWORD: ${CONFIG_KEYSTORE_PASSWORD}
      CONFIG_KEY_PASSWORD: ${CONFIG_KEY_PASSWORD}
      EUREKA_USER: ${EUREKA_USER}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - 8888:8888
    networks:
      - sandbox
      - observabilitysandbox

  # Discovery service
  discovery:
    build: ./discovery
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_USER: ${CONFIG_SERVICE_USER}
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      EUREKA_USER: ${EUREKA_USER}
    depends_on:
      - config
    ports:
      - 8761:8761
    networks:
      - sandbox
      - observabilitysandbox

  # database for catalog query and command
  mongo:
    image: mongo:4.4.6
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    restart: always
    ports:
      - 27017:27017
    networks:
      - sandbox
      - observabilitysandbox

  # Database for catalog query and order processing
  postgres:
    build: ./postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: dbpass
      POSTGRES_USER: dbuser
      PGTZ: Europe/Amsterdam
      CATALOG_DB_USER: catalogdbuser
      CATALOG_DB_PASSWORD: dbpass
      CATALOG_DB_NAME: catalogdb
      ORDER_DB_USER: orderdbuser
      ORDER_DB_PASSWORD: dbpass
      ORDER_DB_NAME: orderdb
      KEYCLOAK_DB_USER: keycloak
      KEYCLOAK_DB_PASSWORD: dbpass
      KEYCLOAK_DB_NAME: keycloakdb
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U dbuser" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    networks:
      - sandbox
      - observabilitysandbox

  # Zookeeper
  zookeeper:
    image: wurstmeister/zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - sandbox
      - observabilitysandbox

  # Kafka
  kafka:
    image: wurstmeister/kafka
    hostname: kafka
    restart: on-failure
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: INTERNAL://:29092,EXTERNAL://:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    links:
      - zookeeper
    ports:
      - 9092:9092
    networks:
      - sandbox
      - observabilitysandbox

  # Portainer Docker management service
  portainer:
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./docker/portainer-data:/data
    ports:
      - 9000:9000
    networks:
      - sandbox
      - observabilitysandbox

  # Services
  # ============================================================================
  # Catalog command service
  catalog-command:
    build: ./catalog-command
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_USER: ${CONFIG_SERVICE_USER}
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      EUREKA_USER: ${EUREKA_USER}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    depends_on:
      - config
      - discovery
      - kafka
    networks:
      - sandbox
      - observabilitysandbox

  # Catalog query service
  catalog-query:
    build: ./catalog-query
    restart: on-failure
    environment:
      SPRING_PROFILES_ACTIVE: docker
      CONFIG_SERVICE_USER: ${CONFIG_SERVICE_USER}
      CONFIG_SERVICE_PASSWORD: ${CONFIG_SERVICE_PASSWORD}
      EUREKA_USER: ${EUREKA_USER}
      POSTGRES_USER: ${POSTGRES_USER}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    depends_on:
      - config
      - discovery
      - kafka
    networks:
      - sandbox
      - observabilitysandbox

networks:
  sandbox:
    name: sandbox
    external: true
  observabilitysandbox:
    name: observabilitysandbox
    external: true
